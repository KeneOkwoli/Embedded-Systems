\ Servo Control Code
\ Define PWM Base and Registers
$40014000 constant IO_BANK0_BASE
$40050000 constant PWM_BASE
$d0000000 constant SIO_BASE
$1C0310E0 constant LED_MASK

IO_BANK0_BASE $074 + constant GPIO14_CTRL
IO_BANK0_BASE $07C + constant GPIO15_CTRL
IO_BANK0_BASE $0b4 + constant GPIO22_CTRL \ buzzer
SIO_BASE $014 + constant GPIO_OUT_SET
SIO_BASE $018 + constant GPIO_OUT_CLR
SIO_BASE $020 + constant GPIO_OE
PWM_BASE $08C + constant CH7_CSR  \ Control and Status Register for PWM7 Channel-A
PWM_BASE $090 + constant CH7_DIV  \ Clock Divider
PWM_BASE $094 + constant CH7_CTR  \ Direct Access to the PWM Counter
PWM_BASE $098 + constant CH7_CC   \ Counter Compare Register
PWM_BASE $09C + constant CH7_TOP  \ Counter Top Value
PWM_BASE $03C + constant CH3_CSR \ Control and Status Register GPIO22 PWM3 Channel-A
PWM_BASE $040 + constant CH3_DIV \ DIVIDER
PWM_BASE $044 + constant CH3_CTR \ Direct access to the PWM counter
PWM_BASE $048 + constant CH3_CC  \ CCR 
PWM_BASE $04C + constant CH3_TOP \ TOP

$0FFF CH3_DIV !
$0E8 CH3_TOP !
$074 CH3_CC !
1 CH3_CSR !
0 CH3_CSR ! \ bit 0 enables the PWM


\ Initialise PWM
: pwm_init
  $04 GPIO14_CTRL !  \ Set GPIO14 function to PWM (servo)
  $04 GPIO15_CTRL !  \ Set GPIO15 function to PWM (servo)
  $04 GPIO22_CTRL !  \ Set GPIO22 function to PWM (buzzer)
  $028A CH7_DIV !    \ Set divider for the servo PWM clock
  $0F062 CH7_TOP !   \ Set the TOP value for servo PWM (20 ms period)
  1 CH7_CSR !        \ Enable servo PWM
  $0FFF CH3_DIV !    \ Set divider for the buzzer PWM clock
  $0E8 CH3_TOP !     \ Set the TOP value for the buzzer PWM
  0 CH3_CSR !        \ Disable buzzer PWM by default
;

\ Initialise all LED GPIOs
: init_leds
  LED_MASK GPIO_OE !  \ Set GPIOs as outputs
  LED_MASK GPIO_OUT_CLR !  \ Turn all LEDs off
;

\ Turn off all LEDs
: all_leds_off
  LED_MASK GPIO_OUT_CLR !
;

\ Create Delay
: my_delay 1500 ms ;

\ Servo Control Words
: SLFT $19FA19FA CH7_CC ! my_delay ;  \ 1 ms pulse width (0 degrees) (6200 in decimal)
: SMID $0C400C40 CH7_CC ! my_delay ;  \ 1.5 ms pulse width (90 degrees) (3140 in decimal)
: SRGT $069F069F CH7_CC ! my_delay ;  \ 2 ms pulse width (180 degrees) (1600 in decimal - to prevent stressing the motor)


\ Servo Operation Demo
: servo_demo begin SLFT SMID SRGT key? until ;

\ Servo Notes
: Servo_G $08340834 CH7_CC ! my_delay ;
: Servo_F $092E092E CH7_CC ! my_delay ;
: Servo_E $0A5A0A5A CH7_CC ! my_delay ;
: Servo_D $0BA40BA4 CH7_CC ! my_delay ;
: Servo_D $0BA40BA4 CH7_CC ! my_delay ;


: c4_pitch
  $074A CH3_TOP !
  $03A5 CH3_CC !
;

: b4_pitch
  $03DC CH3_TOP !
  $01EE CH3_CC !
;

: g4_pitch
  $04DD CH3_TOP !
  $026E CH3_CC !
;

: a4_pitch
  $0455 CH3_TOP !
  $022A CH3_CC !
;
: f4_pitch
  $0576 CH3_TOP !
  $02BB CH3_CC !
;

: e4_pitch
  $05C9 CH3_TOP !
  $02E4 CH3_CC !
;

: d4_pitch
  $067E CH3_TOP !
  $033F CH3_CC !
;

: O4C
  c4_pitch
  1 CH3_CSR !
  500 ms
  0 CH3_CSR !
  100 ms
;

: O4B
  b4_pitch
  1 CH3_CSR !
  500 ms
  0 CH3_CSR !
  100 ms
;

: O4G
  g4_pitch
  1 CH3_CSR !
  500 ms
  0 CH3_CSR !
  100 ms
;

: O4A
  a4_pitch
  1 CH3_CSR !
  500 ms
  0 CH3_CSR !
  100 ms
;

: O4F
  f4_pitch
  1 CH3_CSR !
  500 ms
  0 CH3_CSR !
  100 ms
;

: O4E
  e4_pitch
  1 CH3_CSR !
  500 ms
  0 CH3_CSR !
  100 ms
;

: O4D
  d4_pitch
  1 CH3_CSR !
  500 ms
  0 CH3_CSR !
  100 ms
;

\ Control words for each letter
: LTA  all_leds_off  $08000020 GPIO_OUT_SET ! ;  \ GP27 and GP5
: LTB  all_leds_off  $08000040 GPIO_OUT_SET ! ;  \ GP27 and GP6
: LTC  all_leds_off  $08000060 GPIO_OUT_SET ! ;  \ GP27 and GP6 and GP5
: LTD  all_leds_off  $08000080 GPIO_OUT_SET ! ;  \ GP27 and GP7
: LTE  all_leds_off  $080000a0 GPIO_OUT_SET ! ;  \ GP27 and GP7 and GP5
: LTF  all_leds_off  $080000c0 GPIO_OUT_SET ! ;  \ GP27 and GP16
: LTG  all_leds_off  $080000e0 GPIO_OUT_SET ! ;  \ GP17 and GP6


\ Servo + LEDS + Buzzer


: demo
  begin
    SLFT O4C
    SMID O4G
    SRGT O4A
  key? until
;

\ Initialise PWM and LEDs
init_leds
pwm_init